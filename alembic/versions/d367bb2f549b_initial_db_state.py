"""Initial DB state

Revision ID: d367bb2f549b
Revises: 
Create Date: 2022-01-27 14:36:56.074829

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd367bb2f549b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('case_filters',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('filter_text', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_case_filters'))
    )
    op.create_table('prisoners',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('doc_num', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('judgment_name', sa.String(), nullable=True),
    sa.Column('legal_name', sa.String(), nullable=True),
    sa.Column('vendor_code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_prisoners'))
    )
    with op.batch_alter_table('prisoners', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_prisoners_doc_num'), ['doc_num'], unique=True)
        batch_op.create_index(batch_op.f('ix_prisoners_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_prisoners_judgment_name'), ['judgment_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_prisoners_legal_name'), ['legal_name'], unique=False)

    op.create_table('suffix_table',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('suffix_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_suffix_table'))
    )
    op.create_table('alias',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('prisoner_doc_num', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('alias_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['prisoner_doc_num'], ['prisoners.doc_num'], name=op.f('fk_alias_prisoner_doc_num_prisoners')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_alias'))
    )
    op.create_table('court_cases',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('prisoner_doc_num', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('acct_cd', sa.String(), nullable=True),
    sa.Column('ecf_case_num', sa.String(), nullable=True),
    sa.Column('ccam_case_num', sa.String(), nullable=True),
    sa.Column('case_comment', sa.String(), nullable=True),
    sa.Column('balance_created_date', sa.DateTime(), nullable=True),
    sa.Column('balance_updated_date', sa.DateTime(), nullable=True),
    sa.Column('amount_assessed', sa.NUMERIC(), nullable=False),
    sa.Column('amount_collected', sa.NUMERIC(), nullable=False),
    sa.Column('amount_owed', sa.NUMERIC(), nullable=False),
    sa.ForeignKeyConstraint(['prisoner_doc_num'], ['prisoners.doc_num'], name=op.f('fk_court_cases_prisoner_doc_num_prisoners')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_court_cases'))
    )
    op.create_table('case_reconciliation',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('court_case_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('previous_amount_assessed', sa.NUMERIC(), nullable=False),
    sa.Column('previous_amount_collected', sa.NUMERIC(), nullable=False),
    sa.Column('previous_amount_owed', sa.NUMERIC(), nullable=False),
    sa.Column('updated_amount_assessed', sa.NUMERIC(), nullable=False),
    sa.Column('updated_amount_collected', sa.NUMERIC(), nullable=False),
    sa.Column('updated_amount_owed', sa.NUMERIC(), nullable=False),
    sa.ForeignKeyConstraint(['court_case_id'], ['court_cases.id'], name=op.f('fk_case_reconciliation_court_case_id_court_cases')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_case_reconciliation'))
    )
    op.create_table('case_transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('court_case_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('check_number', sa.INTEGER(), nullable=False),
    sa.Column('amount_paid', sa.NUMERIC(), nullable=False),
    sa.ForeignKeyConstraint(['court_case_id'], ['court_cases.id'], name=op.f('fk_case_transactions_court_case_id_court_cases')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_case_transactions'))
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_table('case_transactions')
    op.drop_table('case_reconciliation')
    op.drop_table('court_cases')
    op.drop_table('alias')
    op.drop_table('suffix_table')
    with op.batch_alter_table('prisoners', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_prisoners_legal_name'))
        batch_op.drop_index(batch_op.f('ix_prisoners_judgment_name'))
        batch_op.drop_index(batch_op.f('ix_prisoners_id'))
        batch_op.drop_index(batch_op.f('ix_prisoners_doc_num'))

    op.drop_table('prisoners')
    op.drop_table('case_filters')
    # ### end Alembic commands ###
